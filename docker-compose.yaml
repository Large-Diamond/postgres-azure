version: "3.8"

volumes:
  postgres-data:

services:
  mkcert:
    environment:
      CAROOT: "/certs"
    image: "alpine/mkcert:latest"
    command:
      - -cert-file
      - /certs/blobstorage.crt
      - -key-file
      - /certs/blobstorage.key
      - blobstorage
      - localhost
    volumes:
      - ./.certs:/certs

  app:
    build: .
    environment:
      SPRING_ACTUATOR_PORT: "8082"
      SPRING_PROFILES_ACTIVE: "test"
      STORAGE_ACCOUNT_BLOB_URL: "https://blobstorage:10000/devstoreaccount1"
      STORAGE_ACCOUNT_CONTAINER_NAME: "backups"
      DATABASES_CONFIG_PATH: /app/databases_config.json
    ports:
      - "8080:8080"
    volumes:
      - "./test/databases_config.json:/app/databases_config.json"
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 2s
    depends_on:
      mkcert:
        condition: service_completed_successfully
      db1:
        condition: service_healthy
      db2:
        condition: service_healthy
      blobstorage:
        condition: service_healthy
    volumes_from:
      - mkcert:ro

  blobstorage:
    image: "mcr.microsoft.com/azure-storage/azurite:latest"
    command: "azurite-blob --blobHost 0.0.0.0 --oauth basic --cert /certs/blobstorage.crt --key /certs/blobstorage.key"
    ports:
      - "8081:10000"
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30
    depends_on:
      mkcert:
        condition: service_completed_successfully
    volumes_from:
      - mkcert:ro

  db1:
    image: "postgres:16.9-bullseye"
    environment:
      POSTGRES_DB: "test"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    ports:
      - "8082:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  db2:
    image: "postgres:16.9-bullseye"
    environment:
      POSTGRES_DB: "test"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    ports:
      - "8083:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
